#BlueJ class context
comment0.target=StudentManager
comment0.text=\r\n\ @author\ James\ Robertson\r\n\r\n\ Cette\ classe\ permet\ de\ g\u00E9rer\ l'ensemble\ des\ \u00E9tudiants\r\n
comment1.params=etudiant
comment1.target=void\ ajouterEtudiant(Student)
comment1.text=\r\n\ Ajouter\ un\ etudiant\ \u00E0\ la\ liste\ des\ \u00E9tudiants\r\n\ @param\ etudiant\ \:\ l'\u00E9tudiant\ \u00E0\ ajouter\r\n
comment2.params=
comment2.target=Student\ randomStudent()
comment2.text=\r\n\ @return\ un\ \u00E9tudiant\ al\u00E9atoire.\r\n
comment3.params=
comment3.target=java.util.ArrayList\ getStudents()
comment3.text=\r\n\ @return\ la\ liste\ des\ \u00E9tudiants\r\n
comment4.params=
comment4.target=Student\ nextStudent()
comment4.text=\r\n\ @return\ S'il\ s'agit\ du\ premier\ tirage\ on\ tire\ un\ \u00E9tudiant\ au\ hasard.\r\n\ Sinon\ on\ tire\ l'\u00E9tudiant\ qui\ a\ le\ moins\ de\ passages\ s'il\ ne\ s'agit\ pas\ du\ dernier\ \u00E0\ \u00EAtre\ pass\u00E9\r\n\ Autrement,\ il\ choisit\ le\ deuxi\u00E8me\ \u00E9tudiant\ avec\ le\ moins\ de\ passages.\r\n
comment5.params=
comment5.target=void\ clearStudents()
comment5.text=\r\n\ Remet\ \u00E0\ 0\ la\ liste\ des\ \u00E9tudiants\r\n
comment6.params=
comment6.target=Student\ lastStudent()
comment6.text=\r\n\ @return\ le\ dernier\ \u00E9tudiant\ tir\u00E9\ au\ sort\r\n
comment7.params=
comment7.target=java.lang.String\ lastStudentName()
comment7.text=\r\n\ @return\ le\ nom\ du\ dernier\ \u00E9tudiant\ tir\u00E9\ au\ sort,\ ou\ "Aucun"\ s'il\ n'existe\ pas\r\n
numComments=8
